{
  "ver": "1.0.25",
  "uuid": "3aea9ac8-75e4-4aa7-b9b1-593ba1ad1927",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n#if USE_MASAIC\nuniform float x_count;\nuniform float y_count;\nvec2 getUvMapPos() {\n  float block_w = 1.0 / x_count;\n  float block_x_idx = floor(v_uv0.x / block_w);\n  float block_h = 1.0 / y_count;\n  float block_y_idx = floor(v_uv0.y / block_h);\n  return vec2(block_w * (block_x_idx + 0.5), block_h * (block_y_idx + 0.5));\n}\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  vec2 realPos = v_uv0;\n  #if USE_MASAIC\n    realPos = getUvMapPos();\n  #endif\n  o *= texture2D(texture, realPos);\n  o *= v_color;\n  float _r = o.r * 0.393 + o.g * 0.769 + o.b * 0.189;\n  float _g = o.r * 0.349 + o.g * 0.686 + o.b * 0.168;\n  float _b = o.r * 0.272 + o.g * 0.534 + o.b * 0.131;\n  gl_FragColor = o;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n#if USE_MASAIC\nuniform ARGS{\n  float x_count;\n  float y_count;\n};\nvec2 getUvMapPos() {\n  float block_w = 1.0 / x_count;\n  float block_x_idx = floor(v_uv0.x / block_w);\n  float block_h = 1.0 / y_count;\n  float block_y_idx = floor(v_uv0.y / block_h);\n  return vec2(block_w * (block_x_idx + 0.5), block_h * (block_y_idx + 0.5));\n}\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  vec2 realPos = v_uv0;\n  #if USE_MASAIC\n    realPos = getUvMapPos();\n  #endif\n  o *= texture(texture, realPos);\n  o *= v_color;\n  float _r = o.r * 0.393 + o.g * 0.769 + o.b * 0.189;\n  float _g = o.r * 0.349 + o.g * 0.686 + o.b * 0.168;\n  float _b = o.r * 0.272 + o.g * 0.534 + o.b * 0.131;\n  gl_FragColor = o;\n}"
      }
    }
  ],
  "subMetas": {}
}